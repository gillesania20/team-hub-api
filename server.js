import 'dotenv/config';
import express from 'express';
import cookieParser from 'cookie-parser';
import path from 'path';
import { fileURLToPath } from 'url';
import cors from 'cors';
import connectToDB from './functions/connectToDB.js';
import rootRouter from './routes/root/rootRouter.js';
import authRouter from './routes/auth/authRouter.js';
import userRouter from './routes/users/userRouter.js';
import teamRouter from './routes/teams/teamRouter.js';
import postRouter from './routes/posts/postRouter.js';
import commentRouter from './routes/comments/commentRouter.js';
import membershipRouter from './routes/memberships/membershipRouter.js';
import postVoteRouter from './routes/postVotes/postVoteRouter.js';
import commentVoteRouter from './routes/commentVotes/commentVoteRouter.js';
import cookieCheckerRouter from './routes/cookieChecker/cookieCheckerRouter.js';
import pageNotFoundRouter from './routes/errors/pageNotFoundRouter.js';
import errorHandler from './middlewares/errorHandler.js';
import corsOptions from './config/corsOptions.js';
const app = express();
const PORT = process.env.PORT || 3500;
const __filename = fileURLToPath(import.meta.url);
const __dirname = path.dirname(__filename);
app.use(cors(corsOptions));
app.use('/static', express.static(path.join(__dirname, 'public')));
app.use(express.urlencoded({extended: true}));
app.use(express.json());
app.use(cookieParser());
app.use('/', rootRouter);
app.use('/api/auth', authRouter);
app.use('/api/users', userRouter);
app.use('/api/teams', teamRouter);
app.use('/api/posts', postRouter);
app.use('/api/comments', commentRouter);
app.use('/api/memberships', membershipRouter);
app.use('/api/post_votes', postVoteRouter);
app.use('/api/comment_votes', commentVoteRouter);
app.use('/api/cookie_checker', cookieCheckerRouter);
app.use('*', pageNotFoundRouter);
app.use(errorHandler);
connectToDB(app, PORT);